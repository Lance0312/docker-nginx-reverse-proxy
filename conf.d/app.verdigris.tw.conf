# Redirect http to https
server {
    listen 80;
    server_name app.verdigris.tw;
    return 301 https://$host$request_uri;
}

# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
}

server {
    server_name app.verdigris.tw;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/app.verdigris.tw/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.verdigris.tw/privkey.pem;

    # Some ssl specific copy from cerbot's repo https://github.com/certbot/certbot
    # Reference:
    # https://github.com/certbot/certbot/blob/master/certbot-nginx/certbot_nginx/options-ssl-nginx.conf
    # https://github.com/certbot/certbot/blob/master/certbot/ssl-dhparams.pem 
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    expires $expires;

    sub_filter_types *;
    sub_filter_once off;
    sub_filter '//maps.google.com/'  '/proxy-map/';
    sub_filter 'https://maps.google.com/'  '/proxy-map/';
    sub_filter 'https://www.google.com/jsapi' '/proxy-jsapi';
    sub_filter 'https://www.google.com/' '/proxy-general/';
    sub_filter 'https://app.verdigris.co/' '/';
    sub_filter 'https://verdigris.sisense.com/' '/proxy-sisense/';
    
    proxy_buffer_size 64k;
    proxy_buffers 4 128k;
    proxy_busy_buffers_size 128k;

    # To bypass the initialization error
    # proxy the `https://www.google.com/jsapi` request
    location /proxy-jsapi {
        proxy_pass https://www.google.com/jsapi;
        proxy_set_header Accept-Encoding "";
    }

    # For google charts in pages `Real-Time Data` and `End-Use`
    # proxy the `https://www.google.com/uds/?file=visualization&v=1.1&packages=controls%2Ccorechart` request
    location ~ /proxy-general/(.*) {
        proxy_pass https://www.google.com;
        rewrite /proxy-general/(.*) /$1 break;
    }        

    # To bypass the initialization error
    # proxy the `https://maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=geometry` request
    location ~ /proxy-map/(.*) {
        proxy_pass https://maps.google.com;
        rewrite /proxy-map/(.*) /$1 break;
    }

    # For successfully pass the SSO process with Sisense
    location ~ /proxy-sisense/(.*) {
        proxy_pass https://verdigris.sisense.com;
        proxy_pass_request_headers on;
        # set the redirect domain to our proxy server, so that we can preserve and control the cookie use to sign with sisense
        proxy_redirect https://app.verdigris.co/ https://app.verdigris.tw/;
        rewrite /proxy-sisense/(.*) /$1 break;
    }       

    # Proxy all other requests to `https://app.verdigris.co`
    location / {
        proxy_pass https://app.verdigris.co;
        proxy_pass_request_headers on;
        proxy_set_header Accept-Encoding "";
    }
}
